{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pradip/aradesigns/components/screen-pattern/index.js\";\nimport React, { Component } from 'react';\nimport { Box, Dot } from './structs';\nimport './style.less';\n\nvar Pattern =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pattern, _Component);\n\n  function Pattern(props) {\n    var _this;\n\n    _classCallCheck(this, Pattern);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pattern).call(this, props));\n    _this.box = new Box();\n    _this.dotsArray = [];\n    _this.state = {\n      width: 0,\n      height: 0\n    };\n    return _this;\n  }\n\n  _createClass(Pattern, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }, function () {\n        var domCanvas = _this2.refs.canvas;\n        _this2.ctx = domCanvas.getContext('2d');\n        var _this2$state = _this2.state,\n            width = _this2$state.width,\n            height = _this2$state.height;\n        var rows = Math.round(height / 25);\n        var columns = Math.round(width / 25);\n        var wStep = width / columns;\n        var hStep = height / rows;\n\n        for (var i = 0; i < width; i += wStep) {\n          for (var j = 0; j < height; j += hStep) {\n            _this2.dotsArray.push(new Dot(i, j, _this2.box, _this2.props.animate));\n          }\n        }\n\n        if (_this2.props.animate) {\n          _this2.animateDropDots();\n        } else {\n          _this2.draw();\n        }\n\n        document.body.addEventListener(\"mousemove\", function (evt) {\n          _this2.box.move(evt.clientX, evt.clientY);\n\n          _this2.draw(_this2.ctx);\n        });\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n      this.ctx.clearRect(0, 0, width, height);\n\n      for (var i = 0; i < this.dotsArray.length; i++) {\n        var dot = this.dotsArray[i];\n        dot.draw(this.ctx);\n      }\n    }\n  }, {\n    key: \"animateDropDots\",\n    value: function animateDropDots() {\n      var _this3 = this;\n\n      var getProgress = function getProgress(_ref) {\n        var elapsed = _ref.elapsed,\n            total = _ref.total;\n        return Math.min(elapsed / total, 1);\n      };\n\n      var easeOut = function easeOut(progress) {\n        var newProgress = progress - 1;\n        return Math.pow(newProgress, 5) + 1;\n      };\n\n      var time = {\n        start: performance.now(),\n        total: 2000\n      };\n\n      var step = function step(now) {\n        time.elapsed = now - time.start;\n        var progress = getProgress(time);\n        var easing = easeOut(progress);\n        var currVal = easing * 1;\n\n        for (var i = 0; i < _this3.dotsArray.length; i++) {\n          _this3.dotsArray[i].animate(currVal);\n        }\n\n        _this3.draw();\n\n        if (progress < 1) requestAnimationFrame(step);\n      };\n\n      requestAnimationFrame(step);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          width = _this$state2.width,\n          height = _this$state2.height;\n      return React.createElement(\"canvas\", {\n        width: width,\n        height: height,\n        className: \"screen-pattern\",\n        ref: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Pattern;\n}(Component);\n\n_defineProperty(Pattern, \"defaultProps\", {\n  animate: false\n});\n\nexport default Pattern;","map":{"version":3,"sources":["/Users/pradip/aradesigns/components/screen-pattern/index.js"],"names":["React","Component","Box","Dot","Pattern","props","box","dotsArray","state","width","height","setState","window","innerWidth","innerHeight","domCanvas","refs","canvas","ctx","getContext","rows","Math","round","columns","wStep","hStep","i","j","push","animate","animateDropDots","draw","document","body","addEventListener","evt","move","clientX","clientY","clearRect","length","dot","getProgress","elapsed","total","min","easeOut","progress","newProgress","time","start","performance","now","step","easing","currVal","requestAnimationFrame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Box, Dot } from './structs'\nimport './style.less'\n\nclass Pattern extends Component {\n    static defaultProps = {\n        animate: false\n    }\n\n    constructor(props) {\n        super(props);\n        this.box = new Box();\n        this.dotsArray = [];\n        this.state = {\n            width: 0, height: 0\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            width: window.innerWidth,\n            height: window.innerHeight\n        }, () => {\n            const domCanvas = this.refs.canvas;\n            this.ctx = domCanvas.getContext('2d');    \n            const { width, height } = this.state;\n\n            const rows = Math.round(height/25);\n            const columns = Math.round(width/25);\n\n            const wStep = width/columns;\n            const hStep = height/rows;\n\n            for (let i = 0; i < width; i+=wStep) {\n                for (let j = 0; j < height; j+=hStep) {\n                    this.dotsArray.push(new Dot(i, j, this.box, this.props.animate));\n                }\n            }\n\n            if (this.props.animate) {\n                this.animateDropDots();\n            } else {\n                this.draw();\n            }\n            \n            document.body.addEventListener(\"mousemove\", (evt) => {\n                this.box.move(evt.clientX, evt.clientY);\n                this.draw(this.ctx)\n            });\n        })\n    }\n\n    draw() {\n        const { width, height } = this.state;\n\n        this.ctx.clearRect(0, 0, width, height)\n    \n        for (let i = 0; i < this.dotsArray.length; i++) {\n            const dot = this.dotsArray[i];\n            dot.draw(this.ctx);\n        }\n    }\n\n    animateDropDots() {\n        const getProgress = ({ elapsed, total }) => Math.min(elapsed / total, 1)\n    \n        const easeOut = progress => {\n            const newProgress = progress - 1\n    \n            return newProgress ** 5 + 1\n        }\n    \n        const time = {\n            start: performance.now(),\n            total: 2000,\n        }\n    \n        const step = now => {\n            time.elapsed = now - time.start\n            const progress = getProgress(time)\n            const easing = easeOut(progress)\n            const currVal = easing * 1\n            \n            for (let i = 0; i < this.dotsArray.length; i++) {\n                this.dotsArray[i].animate(currVal);\n            }\n            this.draw()\n            \n            if (progress < 1) requestAnimationFrame(step)\n        }\n    \n        requestAnimationFrame(step)\n    }\n    \n    \n    render() {\n        const { width, height } = this.state;\n\n        return (\n            <canvas\n                width={width}\n                height={height}\n                className=\"screen-pattern\" \n                ref=\"canvas\" />\n        );\n    }\n}\n\nexport default Pattern"]},"metadata":{},"sourceType":"module"}