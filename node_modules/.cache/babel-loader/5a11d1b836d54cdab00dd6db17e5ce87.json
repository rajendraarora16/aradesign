{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Box, Dot } from './structs';\nimport './style.less';\n\nvar Pattern =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pattern, _Component);\n\n  function Pattern(props) {\n    var _this;\n\n    _classCallCheck(this, Pattern);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pattern).call(this, props));\n    _this.box = new Box();\n    _this.dotsArray = [];\n    _this.state = {\n      width: 0,\n      height: 0\n    };\n    return _this;\n  }\n\n  _createClass(Pattern, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }, function () {\n        var domCanvas = _this2.refs.canvas;\n        _this2.ctx = domCanvas.getContext('2d');\n        var _this2$state = _this2.state,\n            width = _this2$state.width,\n            height = _this2$state.height;\n        var rows = Math.round(height / 25);\n        var columns = Math.round(width / 25);\n        var wStep = width / columns;\n        var hStep = height / rows;\n\n        for (var i = 0; i < width; i += wStep) {\n          for (var j = 0; j < height; j += hStep) {\n            _this2.dotsArray.push(new Dot(i, j, _this2.box, _this2.props.animate));\n          }\n        }\n\n        if (_this2.props.animate) {\n          _this2.animateDropDots();\n        } else {\n          _this2.draw();\n        }\n\n        document.body.addEventListener(\"mousemove\", function (evt) {\n          _this2.box.move(evt.clientX, evt.clientY);\n\n          _this2.draw(_this2.ctx);\n        });\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n      this.ctx.clearRect(0, 0, width, height);\n\n      for (var i = 0; i < this.dotsArray.length; i++) {\n        var dot = this.dotsArray[i];\n        dot.draw(this.ctx);\n      }\n    }\n  }, {\n    key: \"animateDropDots\",\n    value: function animateDropDots() {\n      var _this3 = this;\n\n      var getProgress = function getProgress(_ref) {\n        var elapsed = _ref.elapsed,\n            total = _ref.total;\n        return Math.min(elapsed / total, 1);\n      };\n\n      var easeOut = function easeOut(progress) {\n        var newProgress = progress - 1;\n        return Math.pow(newProgress, 5) + 1;\n      };\n\n      var time = {\n        start: performance.now(),\n        total: 2000\n      };\n\n      var step = function step(now) {\n        time.elapsed = now - time.start;\n        var progress = getProgress(time);\n        var easing = easeOut(progress);\n        var currVal = easing * 1;\n\n        for (var i = 0; i < _this3.dotsArray.length; i++) {\n          _this3.dotsArray[i].animate(currVal);\n        }\n\n        _this3.draw();\n\n        if (progress < 1) requestAnimationFrame(step);\n      };\n\n      requestAnimationFrame(step);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          width = _this$state2.width,\n          height = _this$state2.height;\n      return React.createElement(\"canvas\", {\n        width: width,\n        height: height,\n        className: \"screen-pattern\",\n        ref: \"canvas\"\n      });\n    }\n  }]);\n\n  return Pattern;\n}(Component);\n\n_defineProperty(Pattern, \"defaultProps\", {\n  animate: false\n});\n\nexport default Pattern;","map":null,"metadata":{},"sourceType":"module"}