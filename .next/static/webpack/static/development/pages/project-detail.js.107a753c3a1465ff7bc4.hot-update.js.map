{"version":3,"file":"static/webpack/static/development/pages/project-detail.js.107a753c3a1465ff7bc4.hot-update.js","sources":["webpack:///./pages/project-detail.js"],"sourcesContent":["import React, { Component, Fragment, useState } from 'react'\nimport Slider from 'react-slick'\nimport Scramble from 'react-scramble'\nimport axios from 'axios'\nimport Header from '../components/header'\nimport '../styles/project-detail.less'\n\nclass SimpleSlider extends Component {\n    constructor(props) {\n        super(props);\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n    }\n\n    play = () => {\n        this.slider.slickPlay()\n    }\n    \n    pause = () => {\n        this.slider.slickPause()\n    }\n\n    render(){\n        const settings = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            autoplay: true,\n            slidesToScroll: 1,\n            arrows: false,\n            autoplaySpeed: 2000\n        }\n        const { images } = this.props\n        return (\n            <div className=\"sliderWrapper\" onMouseEnter={this.play} onMouseLeave={this.pause}>\n                <Slider {...settings} ref={slider => (this.slider = slider)}>\n                    {images && images.map((item, index) => (\n                        <div key={index}>\n                            <img src={item} alt=\"\" />\n                        </div>\n                    ))}\n                </Slider>\n            </div>\n        );\n    }\n}\n\nclass PeopleDetail extends Component {\n    constructor(props) {\n        this.handleClick = this.handleClick.bind()\n    }\n    state = {\n        data: []\n    }\n\n    componentDidMount() {\n        axios\n            .get('https://api.myjson.com/bins/160sf3')\n            .then(res => this.setState({ data: res.data }))\n            .catch(error => console.log('Err: ', error))\n    }\n\n\n    renderProjectDetailSlider = (data) => {\n        return (\n            <SimpleSlider images={data.projectImages} />\n        )\n    }\n\n    handleClick = (e) => {\n       console.log('innnn')\n    }  \n\n    renderProjectDetail = (data) => {\n        return (\n            <Fragment>\n                <div className=\"column column-right\">\n                    <div className=\"detail-content\">\n                        <h2>{data.name}</h2>\n                        <div className=\"tags\">\n                            <span>\n                            <Scramble\n                                autoStart\n                                text={`JAIPUR, ${data.location.toUpperCase()} |`}\n                                steps={[\n                                {\n                                    roll: 10,\n                                    action: '+',\n                                    type: 'all',\n                                },\n                                {\n                                    action: '-',\n                                    type: 'forward',\n                                },\n                                ]}\n                            />\n                            </span>\n                            <span>\n                                <Scramble\n                                    autoStart\n                                    text={`${data.type.toUpperCase()} |`}\n                                    steps={[\n                                    {\n                                        roll: 10,\n                                        action: '+',\n                                        type: 'all',\n                                    },\n                                    {\n                                        action: '-',\n                                        type: 'forward',\n                                    },\n                                    ]}\n                                />\n                            </span>\n                            <span>\n                                <Scramble\n                                    autoStart\n                                    text={`${data.status.toUpperCase()} |`}\n                                    steps={[\n                                    {\n                                        roll: 10,\n                                        action: '+',\n                                        type: 'all',\n                                    },\n                                    {\n                                        action: '-',\n                                        type: 'forward',\n                                    },\n                                    ]}\n                                /> \n                            </span>\n                            <span>\n                                <Scramble\n                                    autoStart\n                                    text={`${data.size.toUpperCase()} |`}\n                                    steps={[\n                                    {\n                                        roll: 10,\n                                        action: '+',\n                                        type: 'all',\n                                    },\n                                    {\n                                        action: '-',\n                                        type: 'forward',\n                                    },\n                                    ]}\n                                />\n                            </span>\n                        </div>\n                        <p>{data.details}</p>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n    render() {\n        const { data } = this.state\n        return (\n            <div className=\"main-container\">\n                <div className=\"row\">\n                    <div className=\"container\">\n                        <Header />\n                    </div>\n                </div>\n                <div className=\"super-container\">\n                    <div className=\"row\">\n                        <div className=\"container project-details\">\n                            <div className='grid'>\n                                <div className=\"column column-left\">\n                                    <div className=\"slider-section\" onClick={handleClick}>\n                                        {data.length > 0 && this.renderProjectDetailSlider(data[0])}\n                                    </div>\n                                </div>\n                                {data.length > 0 && this.renderProjectDetail(data[0])}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"slider-popup\">\n                        <div class=\"close-menu\"><div class=\"close cross active\" id=\"menu-close\"></div></div>\n                        <div className=\"slider-inner\">\n                            <div className=\"column column-left\">\n                                <div className=\"slider-section\">\n                                    {data.length > 0 && this.renderProjectDetailSlider(data[0])}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PeopleDetail\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAOA;AACA;AACA;AATA;AAWA;AACA;AACA;AAXA;AACA;AAHA;AAIA;AACA;;;AASA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;;;;AAtCA;AACA;AAwCA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAEA;AACA;;;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;AA+FA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA/IA;AACA;AAiJA;;;;A","sourceRoot":""}