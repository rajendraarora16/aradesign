{"version":3,"file":"static/webpack/static/development/pages/project-list.js.ac28f935a208a44b569b.hot-update.js","sources":["webpack:///./pages/project-list.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport axios from 'axios'\nimport Slider from 'react-slick'\nimport Header from '../components/header'\nimport Pattern from '../components/screen-pattern'\nimport '../styles/project-list.less'\nclass SimpleSlider extends Component {\n    constructor(props) {\n        super(props);\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n    }\n\n    play = () => {\n        this.slider.slickPlay()\n    }\n    \n    pause = () => {\n        this.slider.slickPause()\n    }\n\n    render(){\n        const settings = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            arrows: false,\n            autoplaySpeed: 2000\n        }\n\n        const { images } = this.props\n        return (\n            <div className=\"sliderWrapper\" onMouseEnter={this.play} onMouseLeave={this.pause}>\n                <Slider {...settings} ref={slider => (this.slider = slider)}>\n                    {images && images.map((item, index) => (\n                        <div className=\"image-wrapper\" key={index}>\n                            <img src={item} alt=\"\" />\n                        </div>\n                    ))}\n                </Slider>\n            </div>\n        );\n    }\n}\nclass ProjectList extends Component {\n    state = {\n        data: []\n    }\n\n    componentDidMount() {\n        axios\n            .get('https://api.myjson.com/bins/1dzs7j')\n            .then(res => this.setState({ data: res.data }))\n            .catch(error => console.log(`error => ${error}`))\n    }\n\n    renderProjectList = (item, index) => (\n        <div className='column'>\n            <div className='project-list'>\n                <div className='gray-img'>\n                    <div className=\"image-wrapper\">\n                        <img src={item.staticImageUrl} alt=\"name\" />\n                    </div>\n                </div>\n                <div className=\"project-slider\">\n                    <SimpleSlider images={item.projectImages} />\n                </div>\n                <div className=\"project-overlay\">\n                    <div className=\"details-section\">\n                        <h2>{item.name}</h2>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"main-container\">\n                    <div className=\"row\">\n                        <div className=\"container\">\n                            <Header />\n                        </div>\n                    </div>\n                    <div className=\"super-container\">\n                        <div className=\"row\">\n                            <div className=\"container project-container\">\n                                <div className='grid'>\n                                    {this.state.data.map((item, index) => (\n                                        <Fragment key={index}>\n                                            {this.renderProjectList(item, index)}\n                                        </Fragment>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Pattern />\n            </Fragment>\n        )\n    }\n}\n\nexport default ProjectList"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAOA;AACA;AACA;AATA;AAWA;AACA;AACA;AAXA;AACA;AAHA;AAIA;AACA;;;AASA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;;;;AAtCA;AACA;AAuCA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AACA;;;;;;AARA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;AAsBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1DA;AACA;AA4DA;;;;A","sourceRoot":""}